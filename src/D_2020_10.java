
public class D_2020_10 {

	
	/*
	 * ------------------------------------------------------------ 개발일지 -------------------------------------------------------------
	 * 
	 * 2020년 10월
	 * 
	 *  10-09 금
	 *  
	 *  * 개인 공부
	 *  * JAVA
	 *  - 개발일지 등록시작
	 *  - spring handler와 interceptor개념 및 웹소켓 공부
	 * 
	 * 	* 파이널 프로젝트(학원)
	 *  - 학원 파이널 프로젝트 회웝가입,아이디 비번 찾기 화면 수정
	 * 
	 * _______________________________________________________________________________________________________________________________
	 *
	 *	10-10 토
	 *	
	 *	* 개인 공부
	 *	* JAVA
	 *	- spring-websocket을 활용한 소켓통신 공부
	 *	- 결과 정리
	 *	1. HttpSession과 WebSocketSession은 다른것
	 *	2. HttpSession의 아이디값으로 채팅기능을 구현하기 위해선 WebSocketSession과의 연결점이 필요함
	 *	3. JSP에 session=false 잘보자 이 것 때문에 하루 날렸다.(왜 세션값을 못받아오는지  ㅋㅎㅋㅎ)
	 *	
	 *	- 추후 예정
	 *	1. interceptor를 통한 세션 가로채기로 아이디값 가져와서 채팅에 사용자 아이디 넣어 채팅 구현하기
	 *	2. Spring - pojo, DTO, Porxy, shcema, spirng-context-support 공부
	 *	
	 * _______________________________________________________________________________________________________________________________
	 * 
	 * 10-11 일
	 * 
	 * 휴식
	 * 
	 * _______________________________________________________________________________________________________________________________
	 * 
	 * 10-12 월
	 * 
	 * * 개인 공부
	 * 
	 * * 파이널 프로젝트(학원)
	 * - HTML 종합 정리
	 * - DB설계 
	 * - 기능 분담
	 * 		
	 * _______________________________________________________________________________________________________________________________
	 * 
	 * 10-13 화
	 * * 개인공부
	 * - 스키마(shcema)의 정의:
	 * 		1. DB의 구조와 제약조건에 관한 전반적인 명세를 기술한 메타데이터
	 * 		2. DB를 구성하는 개체(Entity), 속성(Attribute), 관계(Relationship)
	 * 		       및 데이터 조작 시 데이터 값들이 갖는 제약조건등에 관해 전반적으로 정의함
	 * 		3. 관점에 따라 외부,개념,내부 스키마로 나뉨
	 * 
	 * * 파이널 프로젝트(학원)
	 * - DB구상중 HTML 구현 안된부분이 있어 구현중
	 * 
	 * 일지를 작성하고 커밋을 안했다. 집중하자....
	 * 
	 * _______________________________________________________________________________________________________________________________
	 * 
	 * 10-14 수
	 * * 개인공부
	 * - Pojo(Plain Old Java Object)의 정의:
	 * 		1. 마틴 파울러가 EJB보다 단순한 자바 오브젝트에 도메인 로직을 넣어 사용하는 것이 여러가지 장점이 있는데 
	 * 		   사용하지 않는 것에 대해 이름이 없어서라 생각하여 pojo라고 이름을 붙임
	 * 		2. 구글링을 하면 정의는 단순하게 getter/setter를 가진 단순한 자바 오브젝트(Bean)라 함
	 * 		3. 특징
	 * 			- 클래스 상속을 강제하지 않는다.
	 * 			- 인터페이스 구현을 강제하지 않는다.
	 * 			- 어노테이션 사용을 강제하지 않는다.
	 * 			- 이러한 제약들이 없는 일반적인 객체를 말함
	 * 
	 * * 파이널 프로젝트(학원)
	 * - HTML 끝
	 * - DB설계 끝
	 * 
	 * _______________________________________________________________________________________________________________________________
	 * 
	 * 10-15 목
	 * * 개인공부
	 * - 실시간 채팅: 
	 * 		1. spring 웹소켓을 사용하여 실시간 채팅 만듬
	 * 		2. HttpSession이랑 WebsocketSession이랑 Map객체를 사용하여 연동시켜서 메세지 출력시
	 * 		   httpSession값 사용할 수 있게 만듬
	 * 
	 * * 파이널 프로젝트(학원)
	 * - 프로젝트 생성 및 login.jsp에서 로그인 후 home.jsp로 가도록 구현 완료 
	 * - 팀원들에게 배포 
	 * 
	 * _______________________________________________________________________________________________________________________________
	 * 
	 * 10-16 금
	 * * 개인공부
	 * - 회원가입 이메일 인증:
	 * 		1. spring에 di주입
	 * 		2. 인증번호 생성 메소드 생성
	 * 		3. 보내기 
	 * 
	 * * 파이널 프로젝트(학원)
	 * - 회원가입(memberJoinForm.jsp)
	 * 		1. 스크립트
	 * 		- 아이디 중복체크
	 * 		- 비밀번호 같은지 확인
	 * 		- 이메일 select누르면 value 나오기
	 * 		- 이메일 인증번호 보내기 누르면 인증하기 버튼나오게하기
	 * 
	 * _______________________________________________________________________________________________________________________________
	 * 
	 * 10-17 토
	 * * 개인공부
	 * - 휴식
	 * 
	 * * 파이널 프로젝트(학원)
	 * - 회원가입(memberJoinForm.jsp)
	 * 		1. 정규표현식외 모든 예외처리 코드 작성
	 * 			- 약관동의
	 * 			- 중복체크
	 * 			- 아이디 
	 * 			- 비번1, 비번2
	 * 			- 이메일 인증
	 * 			- 관심사 선택
	 * 			했는지 안했으면 alert 띄어서 false주기
	 *  - 아이디 비번찾기(memberFindForm.jsp)
	 *  - 아이디찾기 완료 (ajax로 값을 받아와 성공하면 모달띄우기)
	 *  - 비번찾기 완료(ajax으로 비번 난수로 변경후 그 난수 이메일로 전송)
	 *  
	 *  _______________________________________________________________________________________________________________________________
	 *  
	 *  10-18 일
	 *  * 개인 공부
	 *  - Spring Websocket
	 *  	1. Handler에서 Controller로 값을 잘 넘기는지 확인
	 *  	2. 채팅 로직
	 *  		- 화면에서 상대방을 클릭했을 때 채팅방 화면으로 가는데 이 때, 채팅방이 없으면 생성 있으면 말고
	 *  		- 그 채팅방 기준으로 메세지 리턴 
	 *  
	 *  * 파이널 프로젝트(학원)
	 *  - 회원가입 및 로그인 페이지 정규표현식 추가 /^[a-z\d]{4-11}/; 이런식으로
	 *  - 회원가입 및 아이디 비번찾기 진짜 끝 만약 예외처리 덜된거 있으면 추가할듯 
	 *  
	 *  _______________________________________________________________________________________________________________________________
	 *  
	 *  10-19 월
	 *  *개인 공부
	 *  - 휴식
	 *  * 파이널 프로젝트(학원)
	 *  - 임시 비밀번호로 업데이트시 암호화처리 수정
	 *  - web.xml 서블릿 매핑에 *.js 추가
	 *  - 채팅 html 분석
	 *  
	 *  _______________________________________________________________________________________________________________________________
	 *  
	 *  10-20 화
	 *  * 개인공부
	 *  - Spring WebSocket
	 *  	1. sockJS에서 메세지를 핸들러로 보낼때 message + "|" + id값을 이용해 handler에서 
	 *  	split을 통해 쪼갠뒤 그 값을 이용해 보낼 webSocketSession 지정하여 1대1 채팅 구현
	 *  	2. 이제 보낸사람과 ㅂ받는사람에 따라 어떻게 화면에 띄울지 고민해야함
	 *  * 파이널 프로젝트(학원)
	 *  - menubar.jsp에 채팅 부분 추가
	 *  - web.xml의 서블릿 매핑에 *.js 다시한번 추가
	 *  
	 *   _______________________________________________________________________________________________________________________________
	 *   
	 *   10-21 수
	 *   * 개인공부
	 *   - Spring WebSocket
	 *   	1. handler에서 값을 받을 때 split을 이용해 메세지 or 알람, 누가 보냈는지 등등을 알고 그에 따라 로직수정
	 *   	2. jsp에서 받아온 msg값을 split해서 내가 보낸것과 그걸 받은사람에 따라 화면에 어떻게 처리할지 로직수정
	 *   * 파이널 프로젝트(학원)
	 *   - pom.xml 웹소켓 라이브러리 추가
	 *   - 채팅 패키지 작성
	 *   
	 *   _______________________________________________________________________________________________________________________________
	 *    
	 *    10-22 목
	 *    * 개인공부
	 *    - SQLD 자격증 공부
	 *    	이론: 데이터 모델링의 이해
	 *    	책: 1장
	 *    * 파이널 프로젝트(학원)
	 *    - 프로젝트에 웹소켓 연동
	 *    - HttpSession과 WebSocketSession id값 연동
	 *    
	 *   _______________________________________________________________________________________________________________________________
	 *    
	 *    10-23 금
	 *    * 개인공부
	 *    - 휴식
	 *    * 파이널 프로젝트(학원)
	 *    - 유저 채팅목록 불러오기 구현(ajax)
	 *    - 유저 채팅방 내용 불러오기 구현(ajax)
	 *    - 웹소켓을 통한 실시간 채팅 구현
	 *    
	 *    _______________________________________________________________________________________________________________________________
	 *    
	 *    10-24 토
	 *    * 개인공부
	 *    
	 *    * 파이널 프로젝트(학원)
	 *    - 실시간 채팅 - 1대1 채팅 DB연동 완료
	 *    - 채팅방 생성하는 로직 구현해야함 (마이페이지 중 상대방 페이지가 구현이 되야 가능)
	 *    - 다중 채팅방 구현해야함
	 *    
	 *    _______________________________________________________________________________________________________________________________
	 *    
	 *    10-25 일
	 *    
	 *    휴식
	 *    
	 *    _______________________________________________________________________________________________________________________________
	 *    
	 *    10-26 월
	 *    * 개인공부
	 *    휴식
	 *    
	 *    * 파이널 프로젝트(학원)
	 *    - 실시간 채팅 이미지 연동
	 *    - 공백 넣으면 소켓 끊기는 오류 해결
	 *    _______________________________________________________________________________________________________________________________
	 *    
	 *    10-27 화
	 *    * 개인공부
	 *    - SQLD 자격증 공부
	 *    	이론: 데이터 모델링의 이해
	 *    	책: 1장
	 *    
	 *    * 파이널 프로젝트(학원)
	 *    - 채팅방 생성 구현
	 *    - 채팅방 싱성 후 불러오기, 공백 채팅 등등 오류 해결
	 *    - 이미지도 잘불러옴 1대1채팅은 구현 완료
	 *    
	 *    _______________________________________________________________________________________________________________________________
	 *    
	 *    10-28 수
	 *    * 개인공부
	 *    - SQLD 자격증 공부
	 *    	이론: 데이터 모델링의 이해
	 *    	책: 1장
	 *    
	 *    * 파이널 프로젝트
	 *    - 채팅방 읽음, 읽지않음 처리 완료 
	 *    - 페이지 로딩시, 메세지를 받을 시 = 'N'카운트해서 count > 0 이면 알림 사진으로 바꿈
	 *    - 메세지 받았을 때, 메뉴바 채팅버튼, 채팅방에서 뒤로가기 할때 = 채팅목록 불러오기 실행
	 *    - 만약 채팅목록 불러올 때 마지막 채팅이 toId가 사용자 본인이고 'N'일 때 채팅상대 이름 옆에 알림 이미지 띄움
	 *    - 1대1 채팅 구현완료(카운트한 숫자로 알림 보여주는 건 나중에 여유생기면 할 듯)
	 *    
	 *    _______________________________________________________________________________________________________________________________
	 *    
	 *    10-29 목
	 *    * 개인공부
	 *    - SQLD 자격증 공부
	 *    	이론: 데이터 모델링의 이해
	 *    	책: 1장
	 *    
	 *    * 파이널 프로젝트
	 *    - 채팅방 생성시 채팅 못보내는 오류 수정
	 *    - -> 알고보니 webSocketSession에 동일한 아이디를 가진 세션이 존재해서 그렇다. (주소창 복붙해서 브라우저
	 *    	열다보니 실수 한 듯 ) > webSocketSession 등록 시 중복 확인할 코드 추가할 예정
	 *    - 채팅목록 스크롤바로 바꿈
	 *    - 채팅방 생성후 사용자만 보내고 상대방은 답을 안했을 때 사용자의 채팅목록을 못불러오는 오류 수정
	 *    - -> 자신의 채팅을 소켓에서 받을 때 input:hidden값이 부족했음
	 *    
	 *    _______________________________________________________________________________________________________________________________
	 */
}
